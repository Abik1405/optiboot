################################################################################
#
# Written by James Sleeman, http://sparks.gogo.co.nz/
#
#  ATTiny Series Microcontrollers
#
#   ATtiny13, ATtiny13A            (8 pin)
#   ATtiny25, ATtiny45, ATtiny85   (8 pin)
#   ATtiny24, ATtiny44, ATtiny84   (14 pin)
#
#
#  FUSE AND LOCK BIT NOTE - READ BEFORE YOU GET CONFUSES
#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  When reading in fuses and lock bits from the chip avrdude *sometimes* masks
#  out the bits which are unused, and sets them to 0, other times it doesn't.
#  
#  For chips where it does, if you write for example 0xFC (11111100)
#  avrdude decides to mask the top two bits, then it will read in OX3C (00111100)
#  which means that it will fail when it tries to verify.  So in that case you 
#  need to provide the already-masked byte when you write the lock/fuse so that
#  avrdude won't complain.
#
#  But not all chips are configured this way.
#
#  You can see the masking of the lock/fuse, or not, by looking in avrdude.conf
#  for the appropriate section (t85 in this case, and look for the read 
#  specification for the efuse section, the last 8 bits on the 2nd line
#  are "x" for a mask and "o" for not masked, so if the last 8 are are all "o"
#  in the read section for a fuse then no masking is used.
#
#  Do not rely on the engbedded.com fuse calculator to tell you this, it's not
#  always correct, probably because it depends heavily on the avrdude.conf you 
#  are using at any given time.
#
################################################################################

menu.version    = Processor Version
menu.clock      = Processor Speed
menu.boot       = Use Bootloader
menu.core       = Millis, Tone Support
menu.millis_ppm  = Millis Accuracy
menu.print      = Print Support
menu.serial     = Serial Support

################################################################################
# ATtiny25, ATtiny45, ATtiny85
#
# Note, there is no bootloader section, so we can not do any locking.
#
# avrdude.conf note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# The avrdude.conf supplied with the Arduino IDE does not include support for
# reading the lock bits, so it would fail to verify. Hence why a new avrdude.conf
# is supplied in this boards config.  Sigh.
#
# Lock Buts Note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  avrdude DOES NOT mask the lock bits on the x5, therefore
#
#    0xFF = No Locking
#    0xFE = Read Locking
#    0xFC = Read and Write Locking
#
# Extended Fuses Note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  avrdude DOES NOT mask the extended fuses on the x5, the engbedded.com 
#  calulator's suggestion for alternative efuse settings is incorrect.
#
#
################################################################################

# {{{ ############### ATtiny25 #################################################

attiny25_diy.name=ATtiny25
attiny25_diy.build.mcu=attiny25
attiny25_diy.bootloader.low_fuses=0xE2
attiny25_diy.bootloader.high_fuses=0xDD
attiny25_diy.bootloader.extended_fuses=0xFF
attiny25_diy.bootloader.unlock_bits=0xFF
attiny25_diy.bootloader.lock_bits=0xFF
attiny25_diy.build.f_cpu=8000000L
attiny25_diy.upload.speed=57600
attiny25_diy.build.core=tiny
attiny25_diy.build.variant=tiny8
attiny25_diy.build.board=ATTINY25_DIY
attiny25_diy.upload.tool=diy_attiny:avrdude
attiny25_diy.bootloader.tool=diy_attiny:avrdude

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny25_diy.menu.version.attiny25 = ATtiny25
attiny25_diy.menu.version.attiny25.build.mcu = attiny25

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny25_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
attiny25_diy.menu.boot.optiboot.upload.protocol=arduino
attiny25_diy.menu.boot.optiboot.upload.maximum_size=1466
attiny25_diy.menu.boot.optiboot.bootloader.extended_fuses=0xFE
attiny25_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny25_diy.menu.boot.none=No (ISP Programmer Upload)
attiny25_diy.menu.boot.none.upload.maximum_size=2048
attiny25_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny25_diy.menu.clock.8MHz=8MHz Internal Oscillator
attiny25_diy.menu.clock.8MHz.build.f_cpu=8000000L
attiny25_diy.menu.clock.8MHz.bootloader.low_fuses=0xE2

attiny25_diy.menu.clock.16MHz=16MHz Crystal/Resonator
attiny25_diy.menu.clock.16MHz.build.f_cpu=16000000L
attiny25_diy.menu.clock.16MHz.bootloader.low_fuses=0xFF

attiny25_diy.menu.clock.1MHz=1MHz Internal Oscillator
attiny25_diy.menu.clock.1MHz.build.f_cpu=1000000L
attiny25_diy.menu.clock.1MHz.bootloader.low_fuses=0x62
attiny25_diy.menu.clock.1MHz.upload.speed=9600

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny25_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny25_diy.menu.core.SmallerCore.build.variant=tinyX5
attiny25_diy.menu.core.SmallerCore.build.core=tiny
attiny25_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny25_diy.menu.core.FullCore=Millis and Tone Available
attiny25_diy.menu.core.FullCore.build.variant=tinyX5
attiny25_diy.menu.core.FullCore.build.core=tiny
attiny25_diy.menu.core.FullCore.build.extra_flags=

attiny25_diy.menu.core.SmallestCore=No Millis, No Tone
attiny25_diy.menu.core.SmallestCore.build.variant=tinyX5
attiny25_diy.menu.core.SmallestCore.build.core=tiny
attiny25_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny25_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny25_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

# The Tiny13 doesn't have enough RAM to be able to use Arbitrary Bases
# attiny25_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
# attiny25_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny25_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny25_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny25_diy.menu.print.Dec=Dec Only Supported
attiny25_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny25_diy.menu.print.Hex=Hex Only Supported
attiny25_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny25_diy.menu.print.Oct=Oct Only Supported
attiny25_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny25_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny25_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN

# Millis Accuracy
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny25_diy.menu.millis_ppm.1p6=Better Or Equal 1.666% Error (Default)
attiny25_diy.menu.millis_ppm.1p6.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=16666UL

attiny25_diy.menu.millis_ppm.50p=Better Or Equal 50% Error (Lowest Code Use)
attiny25_diy.menu.millis_ppm.50p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=500000UL

attiny25_diy.menu.millis_ppm.25p=Better Or Equal 25% Error
attiny25_diy.menu.millis_ppm.25p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=250000UL

attiny25_diy.menu.millis_ppm.10p=Better Or Equal 10% Error
attiny25_diy.menu.millis_ppm.10p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=100000UL

attiny25_diy.menu.millis_ppm.5p=Better Or Equal 5% Error
attiny25_diy.menu.millis_ppm.5p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=50000UL

attiny25_diy.menu.millis_ppm.2p5=Better Or Equal 2.5% Error
attiny25_diy.menu.millis_ppm.2p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=25000UL

attiny25_diy.menu.millis_ppm.1p=Better Or Equal 1% Error
attiny25_diy.menu.millis_ppm.1p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=10000UL

attiny25_diy.menu.millis_ppm.0p5=Better Or Equal 0.5% Error
attiny25_diy.menu.millis_ppm.0p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=5000UL

attiny25_diy.menu.millis_ppm.0p25=Better Or Equal 0.25% Error
attiny25_diy.menu.millis_ppm.0p25.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=2500UL

attiny25_diy.menu.millis_ppm.0p1=Better Or Equal 0.1% Error (Highest Code Use)
attiny25_diy.menu.millis_ppm.0p1.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=1000UL

# }}}

# {{{ ############### ATtiny45 #################################################

attiny45_diy.name=ATtiny45
attiny45_diy.build.mcu=attiny45
attiny45_diy.bootloader.low_fuses=0xE2
attiny45_diy.bootloader.high_fuses=0xDD
attiny45_diy.bootloader.extended_fuses=0xFF
attiny45_diy.bootloader.unlock_bits=0xFF
attiny45_diy.bootloader.lock_bits=0xFF
attiny45_diy.build.f_cpu=8000000L
attiny45_diy.upload.speed=57600
attiny45_diy.build.core=tiny
attiny45_diy.build.variant=tiny8
attiny45_diy.build.board=ATTINY45_DIY
attiny45_diy.upload.tool=diy_attiny:avrdude
attiny45_diy.bootloader.tool=diy_attiny:avrdude

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny45_diy.menu.version.attiny45 = ATtiny45
attiny45_diy.menu.version.attiny45.build.mcu = attiny45

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny45_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
attiny45_diy.menu.boot.optiboot.upload.protocol=arduino
attiny45_diy.menu.boot.optiboot.upload.maximum_size=1466
attiny45_diy.menu.boot.optiboot.bootloader.extended_fuses=0xFE
attiny45_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny45_diy.menu.boot.none=No (ISP Programmer Upload)
attiny45_diy.menu.boot.none.upload.maximum_size=2048
attiny45_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny45_diy.menu.clock.8MHz=8MHz Internal Oscillator
attiny45_diy.menu.clock.8MHz.build.f_cpu=8000000L
attiny45_diy.menu.clock.8MHz.bootloader.low_fuses=0xE2

attiny45_diy.menu.clock.16MHz=16MHz Crystal/Resonator
attiny45_diy.menu.clock.16MHz.build.f_cpu=16000000L
attiny45_diy.menu.clock.16MHz.bootloader.low_fuses=0xFF

attiny45_diy.menu.clock.1MHz=1MHz Internal Oscillator
attiny45_diy.menu.clock.1MHz.build.f_cpu=1000000L
attiny45_diy.menu.clock.1MHz.bootloader.low_fuses=0x62
attiny45_diy.menu.clock.1MHz.upload.speed=9600

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny45_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny45_diy.menu.core.SmallerCore.build.variant=tinyX5
attiny45_diy.menu.core.SmallerCore.build.core=tiny
attiny45_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny45_diy.menu.core.FullCore=Millis and Tone Available
attiny45_diy.menu.core.FullCore.build.variant=tinyX5
attiny45_diy.menu.core.FullCore.build.core=tiny
attiny45_diy.menu.core.FullCore.build.extra_flags=

attiny45_diy.menu.core.SmallestCore=No Millis, No Tone
attiny45_diy.menu.core.SmallestCore.build.variant=tinyX5
attiny45_diy.menu.core.SmallestCore.build.core=tiny
attiny45_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny45_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny45_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny45_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny45_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny45_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny45_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny45_diy.menu.print.Dec=Dec Only Supported
attiny45_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny45_diy.menu.print.Hex=Hex Only Supported
attiny45_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny45_diy.menu.print.Oct=Oct Only Supported
attiny45_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny45_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny45_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN


# Millis Accuracy
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny45_diy.menu.millis_ppm.1p6=Better Or Equal 1.666% Error (Default)
attiny45_diy.menu.millis_ppm.1p6.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=16666UL

attiny45_diy.menu.millis_ppm.50p=Better Or Equal 50% Error (Lowest Code Use)
attiny45_diy.menu.millis_ppm.50p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=500000UL

attiny45_diy.menu.millis_ppm.25p=Better Or Equal 25% Error
attiny45_diy.menu.millis_ppm.25p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=250000UL

attiny45_diy.menu.millis_ppm.10p=Better Or Equal 10% Error
attiny45_diy.menu.millis_ppm.10p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=100000UL

attiny45_diy.menu.millis_ppm.5p=Better Or Equal 5% Error
attiny45_diy.menu.millis_ppm.5p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=50000UL

attiny45_diy.menu.millis_ppm.2p5=Better Or Equal 2.5% Error
attiny45_diy.menu.millis_ppm.2p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=25000UL

attiny45_diy.menu.millis_ppm.1p=Better Or Equal 1% Error
attiny45_diy.menu.millis_ppm.1p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=10000UL

attiny45_diy.menu.millis_ppm.0p5=Better Or Equal 0.5% Error
attiny45_diy.menu.millis_ppm.0p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=5000UL

attiny45_diy.menu.millis_ppm.0p25=Better Or Equal 0.25% Error
attiny45_diy.menu.millis_ppm.0p25.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=2500UL

attiny45_diy.menu.millis_ppm.0p1=Better Or Equal 0.1% Error (Highest Code Use)
attiny45_diy.menu.millis_ppm.0p1.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=1000UL

# }}}

# {{{ ############### ATtiny85 #################################################

attiny85_diy.name=ATtiny85
attiny85_diy.build.mcu=attiny85
attiny85_diy.bootloader.low_fuses=0xE2
attiny85_diy.bootloader.high_fuses=0xDD
attiny85_diy.bootloader.extended_fuses=0xFF
attiny85_diy.bootloader.unlock_bits=0xFF
attiny85_diy.bootloader.lock_bits=0xFF
attiny85_diy.build.f_cpu=8000000L
attiny85_diy.upload.speed=57600
attiny85_diy.build.core=tiny
attiny85_diy.build.variant=tiny8
attiny85_diy.build.board=ATTINY85_DIY
attiny85_diy.upload.tool=diy_attiny:avrdude
attiny85_diy.bootloader.tool=diy_attiny:avrdude

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny85_diy.menu.version.attiny85 = ATtiny85
attiny85_diy.menu.version.attiny85.build.mcu = attiny85

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny85_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
attiny85_diy.menu.boot.optiboot.upload.protocol=arduino
attiny85_diy.menu.boot.optiboot.upload.maximum_size=7610
attiny85_diy.menu.boot.optiboot.bootloader.extended_fuses=0xFE
attiny85_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny85_diy.menu.boot.none=No (ISP Programmer Upload)
attiny85_diy.menu.boot.none.upload.maximum_size=8192
attiny85_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny85_diy.menu.clock.8MHz=8MHz Internal Oscillator
attiny85_diy.menu.clock.8MHz.build.f_cpu=8000000L
attiny85_diy.menu.clock.8MHz.bootloader.low_fuses=0xE2

attiny85_diy.menu.clock.16MHz=16MHz Crystal/Resonator
attiny85_diy.menu.clock.16MHz.build.f_cpu=16000000L
attiny85_diy.menu.clock.16MHz.bootloader.low_fuses=0xFF

attiny85_diy.menu.clock.1MHz=1MHz Internal Oscillator
attiny85_diy.menu.clock.1MHz.build.f_cpu=1000000L
attiny85_diy.menu.clock.1MHz.bootloader.low_fuses=0x62
attiny85_diy.menu.clock.1MHz.upload.speed=9600

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny85_diy.menu.core.FullCore=Millis and Tone Available
attiny85_diy.menu.core.FullCore.build.variant=tinyX5
attiny85_diy.menu.core.FullCore.build.core=tiny
attiny85_diy.menu.core.FullCore.build.extra_flags=

attiny85_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny85_diy.menu.core.SmallerCore.build.variant=tinyX5
attiny85_diy.menu.core.SmallerCore.build.core=tiny
attiny85_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny85_diy.menu.core.SmallestCore=No Millis, No Tone
attiny85_diy.menu.core.SmallestCore.build.variant=tinyX5
attiny85_diy.menu.core.SmallestCore.build.core=tiny
attiny85_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny85_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny85_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny85_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny85_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny85_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny85_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny85_diy.menu.print.Dec=Dec Only Supported
attiny85_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny85_diy.menu.print.Hex=Hex Only Supported
attiny85_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny85_diy.menu.print.Oct=Oct Only Supported
attiny85_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny85_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny85_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN


# Millis Accuracy
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny85_diy.menu.millis_ppm.1p6=Better Or Equal 1.666% Error (Default)
attiny85_diy.menu.millis_ppm.1p6.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=16666UL

attiny85_diy.menu.millis_ppm.50p=Better Or Equal 50% Error (Lowest Code Use)
attiny85_diy.menu.millis_ppm.50p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=500000UL

attiny85_diy.menu.millis_ppm.25p=Better Or Equal 25% Error
attiny85_diy.menu.millis_ppm.25p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=250000UL

attiny85_diy.menu.millis_ppm.10p=Better Or Equal 10% Error
attiny85_diy.menu.millis_ppm.10p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=100000UL

attiny85_diy.menu.millis_ppm.5p=Better Or Equal 5% Error
attiny85_diy.menu.millis_ppm.5p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=50000UL

attiny85_diy.menu.millis_ppm.2p5=Better Or Equal 2.5% Error
attiny85_diy.menu.millis_ppm.2p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=25000UL

attiny85_diy.menu.millis_ppm.1p=Better Or Equal 1% Error
attiny85_diy.menu.millis_ppm.1p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=10000UL

attiny85_diy.menu.millis_ppm.0p5=Better Or Equal 0.5% Error
attiny85_diy.menu.millis_ppm.0p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=5000UL

attiny85_diy.menu.millis_ppm.0p25=Better Or Equal 0.25% Error
attiny85_diy.menu.millis_ppm.0p25.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=2500UL

attiny85_diy.menu.millis_ppm.0p1=Better Or Equal 0.1% Error (Highest Code Use)
attiny85_diy.menu.millis_ppm.0p1.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=1000UL

# }}}

























################################################################################
# ATtiny24/A, ATtiny44/A, ATtiny84/A
#
# Note, there is no bootloader section, so we can not do any locking.
#
# Lock Buts Note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  avrdude DOES NOT mask the lock bits on the x4, therefore
#
#    0xFF = No Locking
#    0xFE = Read Locking
#    0xFC = Read and Write Locking
#
# Extended Fuses Note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  avrdude DOES NOT mask the extended fuses on the x4, the engbedded.com 
#  calulator's suggestion for alternative efuse settings is incorrect.
#
#
################################################################################

# {{{ ############### ATtiny24 #################################################

attiny24_diy.name=ATtiny24
attiny24_diy.build.mcu=attiny24
attiny24_diy.bootloader.low_fuses=0xE2
attiny24_diy.bootloader.high_fuses=0xDD
attiny24_diy.bootloader.extended_fuses=0xFF
attiny24_diy.bootloader.unlock_bits=0xFF
attiny24_diy.bootloader.lock_bits=0xFF
attiny24_diy.build.f_cpu=8000000L
attiny24_diy.upload.speed=57600
attiny24_diy.build.core=tiny
attiny24_diy.build.variant=tiny8
attiny24_diy.build.board=ATTINY24_DIY
attiny24_diy.upload.tool=diy_attiny:avrdude
attiny24_diy.bootloader.tool=diy_attiny:avrdude

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny24_diy.menu.version.attiny24 = ATtiny24
attiny24_diy.menu.version.attiny24.build.mcu = attiny24

attiny24_diy.menu.version.attiny24a = ATtiny24a
attiny24_diy.menu.version.attiny24a.build.mcu  = attiny24
# TODO: Fix avrdude.conf so we can specify attiny24a, avr-gcc knows about it
#       but avrdude doesn't.

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny24_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
attiny24_diy.menu.boot.optiboot.upload.protocol=arduino
attiny24_diy.menu.boot.optiboot.upload.maximum_size=1466
attiny24_diy.menu.boot.optiboot.bootloader.extended_fuses=0xFE
attiny24_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny24_diy.menu.boot.none=No (ISP Programmer Upload)
attiny24_diy.menu.boot.none.upload.maximum_size=2048
attiny24_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny24_diy.menu.clock.8MHz=8MHz Internal Oscillator
attiny24_diy.menu.clock.8MHz.build.f_cpu=8000000L
attiny24_diy.menu.clock.8MHz.bootloader.low_fuses=0xE2

attiny24_diy.menu.clock.16MHz=16MHz Crystal/Resonator
attiny24_diy.menu.clock.16MHz.build.f_cpu=16000000L
attiny24_diy.menu.clock.16MHz.bootloader.low_fuses=0xFF

attiny24_diy.menu.clock.1MHz=1MHz Internal Oscillator
attiny24_diy.menu.clock.1MHz.build.f_cpu=1000000L
attiny24_diy.menu.clock.1MHz.bootloader.low_fuses=0x62
attiny24_diy.menu.clock.1MHz.upload.speed=9600

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny24_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny24_diy.menu.core.SmallerCore.build.variant=tinyX4
attiny24_diy.menu.core.SmallerCore.build.core=tiny
attiny24_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny24_diy.menu.core.FullCore=Millis and Tone Available
attiny24_diy.menu.core.FullCore.build.variant=tinyX4
attiny24_diy.menu.core.FullCore.build.core=tiny
attiny24_diy.menu.core.FullCore.build.extra_flags=

attiny24_diy.menu.core.SmallestCore=No Millis, No Tone
attiny24_diy.menu.core.SmallestCore.build.variant=tinyX4
attiny24_diy.menu.core.SmallestCore.build.core=tiny
attiny24_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny24_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny24_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny24_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny24_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny24_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny24_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny24_diy.menu.print.Dec=Dec Only Supported
attiny24_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny24_diy.menu.print.Hex=Hex Only Supported
attiny24_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny24_diy.menu.print.Oct=Oct Only Supported
attiny24_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny24_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny24_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN
# }}}

# {{{ ############### ATtiny44 #################################################

attiny44_diy.name=ATtiny44
attiny44_diy.build.mcu=attiny44
attiny44_diy.bootloader.low_fuses=0xE2
attiny44_diy.bootloader.high_fuses=0xDD
attiny44_diy.bootloader.extended_fuses=0xFF
attiny44_diy.bootloader.unlock_bits=0xFF
attiny44_diy.bootloader.lock_bits=0xFF
attiny44_diy.build.f_cpu=8000000L
attiny44_diy.upload.speed=57600
attiny44_diy.build.core=tiny
attiny44_diy.build.variant=tiny8
attiny44_diy.build.board=ATTINY44_DIY
attiny44_diy.upload.tool=diy_attiny:avrdude
attiny44_diy.bootloader.tool=diy_attiny:avrdude

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny44_diy.menu.version.attiny44 = ATtiny44
attiny44_diy.menu.version.attiny44.build.mcu = attiny44

attiny44_diy.menu.version.attiny44a = ATtiny44a
attiny44_diy.menu.version.attiny44a.build.mcu  = attiny44
# TODO: Fix avrdude.conf so we can specify attiny44a, avr-gcc knows about it
#       but avrdude doesn't.

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny44_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
attiny44_diy.menu.boot.optiboot.upload.protocol=arduino
attiny44_diy.menu.boot.optiboot.upload.maximum_size=1466
attiny44_diy.menu.boot.optiboot.bootloader.extended_fuses=0xFE
attiny44_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny44_diy.menu.boot.none=No (ISP Programmer Upload)
attiny44_diy.menu.boot.none.upload.maximum_size=2048
attiny44_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny44_diy.menu.clock.8MHz=8MHz Internal Oscillator
attiny44_diy.menu.clock.8MHz.build.f_cpu=8000000L
attiny44_diy.menu.clock.8MHz.bootloader.low_fuses=0xE2

attiny44_diy.menu.clock.16MHz=16MHz Crystal/Resonator
attiny44_diy.menu.clock.16MHz.build.f_cpu=16000000L
attiny44_diy.menu.clock.16MHz.bootloader.low_fuses=0xFF

attiny44_diy.menu.clock.1MHz=1MHz Internal Oscillator
attiny44_diy.menu.clock.1MHz.build.f_cpu=1000000L
attiny44_diy.menu.clock.1MHz.bootloader.low_fuses=0x62
attiny44_diy.menu.clock.1MHz.upload.speed=9600

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny44_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny44_diy.menu.core.SmallerCore.build.variant=tinyX4
attiny44_diy.menu.core.SmallerCore.build.core=tiny
attiny44_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny44_diy.menu.core.FullCore=Millis and Tone Available
attiny44_diy.menu.core.FullCore.build.variant=tinyX4
attiny44_diy.menu.core.FullCore.build.core=tiny
attiny44_diy.menu.core.FullCore.build.extra_flags=

attiny44_diy.menu.core.SmallestCore=No Millis, No Tone
attiny44_diy.menu.core.SmallestCore.build.variant=tinyX4
attiny44_diy.menu.core.SmallestCore.build.core=tiny
attiny44_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny44_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny44_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny44_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny44_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny44_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny44_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny44_diy.menu.print.Dec=Dec Only Supported
attiny44_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny44_diy.menu.print.Hex=Hex Only Supported
attiny44_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny44_diy.menu.print.Oct=Oct Only Supported
attiny44_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny44_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny44_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN
# }}}

# {{{ ############### ATtiny84 #################################################

attiny84_diy.name=ATtiny84
attiny84_diy.build.mcu=attiny84
attiny84_diy.bootloader.low_fuses=0xE2
attiny84_diy.bootloader.high_fuses=0xDD
attiny84_diy.bootloader.extended_fuses=0xFF
attiny84_diy.bootloader.unlock_bits=0xFF
attiny84_diy.bootloader.lock_bits=0xFF
attiny84_diy.build.f_cpu=8000000L
attiny84_diy.upload.speed=57600
attiny84_diy.build.core=tiny
attiny84_diy.build.variant=tiny8
attiny84_diy.build.board=ATTINY84_DIY
attiny84_diy.upload.tool=diy_attiny:avrdude
attiny84_diy.bootloader.tool=diy_attiny:avrdude

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny84_diy.menu.version.attiny84 = ATtiny84
attiny84_diy.menu.version.attiny84.build.mcu = attiny84

attiny84_diy.menu.version.attiny84a = ATtiny84a
attiny84_diy.menu.version.attiny84a.build.mcu  = attiny84
# TODO: Fix avrdude.conf so we can specify attiny84a, avr-gcc knows about it
#       but avrdude doesn't.  Actually, avr-gcc in 1.6.x IDE does, not in 1.0.x

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny84_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
attiny84_diy.menu.boot.optiboot.upload.protocol=arduino
attiny84_diy.menu.boot.optiboot.upload.maximum_size=7610
attiny84_diy.menu.boot.optiboot.bootloader.extended_fuses=0xFE
attiny84_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny84_diy.menu.boot.none=No (ISP Programmer Upload)
attiny84_diy.menu.boot.none.upload.maximum_size=8192
attiny84_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny84_diy.menu.clock.8MHz=8MHz Internal Oscillator
attiny84_diy.menu.clock.8MHz.build.f_cpu=8000000L
attiny84_diy.menu.clock.8MHz.bootloader.low_fuses=0xE2

attiny84_diy.menu.clock.16MHz=16MHz Crystal/Resonator
attiny84_diy.menu.clock.16MHz.build.f_cpu=16000000L
attiny84_diy.menu.clock.16MHz.bootloader.low_fuses=0xFF

attiny84_diy.menu.clock.1MHz=1MHz Internal Oscillator
attiny84_diy.menu.clock.1MHz.build.f_cpu=1000000L
attiny84_diy.menu.clock.1MHz.bootloader.low_fuses=0x62
attiny84_diy.menu.clock.1MHz.upload.speed=9600

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny84_diy.menu.core.FullCore=Millis and Tone Available
attiny84_diy.menu.core.FullCore.build.variant=tinyX4
attiny84_diy.menu.core.FullCore.build.core=tiny
attiny84_diy.menu.core.FullCore.build.extra_flags=

attiny84_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny84_diy.menu.core.SmallerCore.build.variant=tinyX4
attiny84_diy.menu.core.SmallerCore.build.core=tiny
attiny84_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny84_diy.menu.core.SmallestCore=No Millis, No Tone
attiny84_diy.menu.core.SmallestCore.build.variant=tinyX4
attiny84_diy.menu.core.SmallestCore.build.core=tiny
attiny84_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny84_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny84_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny84_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny84_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny84_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny84_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny84_diy.menu.print.Dec=Dec Only Supported
attiny84_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny84_diy.menu.print.Hex=Hex Only Supported
attiny84_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny84_diy.menu.print.Oct=Oct Only Supported
attiny84_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny84_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny84_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN

# }}}












################################################################################
# ATtiny13/A
#
# Note, there is no bootloader section, so we can not do any locking.
#
# Lock Buts Note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  avrdude DOES mask the two high bits of the lock byte on the 13, therefore
#
#    0x3F = No Locking
#    0x3E = Read Locking
#    0x3C = Read and Write Locking
#
# Extended Fuses Note
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  avrdude DOES NOT mask the L/H fuses on the 13
#
#
################################################################################

# {{{ ############### ATtiny13 #################################################

attiny13_diy.name=ATtiny13
attiny13_diy.build.mcu=attiny13
attiny13_diy.bootloader.low_fuses=0x7A
attiny13_diy.bootloader.high_fuses=0xFB
attiny13_diy.bootloader.unlock_bits=0x3F
attiny13_diy.bootloader.lock_bits=0x3F
attiny13_diy.build.f_cpu=9600000L
attiny13_diy.upload.speed=57600
attiny13_diy.build.core=tiny
attiny13_diy.build.variant=tiny13
attiny13_diy.build.board=ATTINY13_DIY
attiny13_diy.upload.tool=diy_attiny:avrdude_noefuse
attiny13_diy.bootloader.tool=diy_attiny:avrdude_nobootloader_noefuse

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny13_diy.menu.version.attiny13 = ATtiny13
attiny13_diy.menu.version.attiny13.build.mcu = attiny13

attiny13_diy.menu.version.attiny13a = ATtiny13a
attiny13_diy.menu.version.attiny13a.build.mcu  = attiny13

# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Sorry attiny13, you're too small for bootloaders.
#
# attiny13_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
# attiny13_diy.menu.boot.optiboot.upload.protocol=arduino
# attiny13_diy.menu.boot.optiboot.upload.maximum_size=457
# attiny13_diy.menu.boot.optiboot.bootloader.extended_fuses=0xEB
# attiny13_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny13_diy.menu.boot.none=No (ISP Programmer Upload)
attiny13_diy.menu.boot.none.upload.maximum_size=1024
attiny13_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader_noefuse

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

attiny13_diy.menu.clock.9_6MHz=9.6MHz Internal Oscillator
attiny13_diy.menu.clock.9_6MHz.build.f_cpu=9600000L
attiny13_diy.menu.clock.9_6MHz.bootloader.low_fuses=0x7A

attiny13_diy.menu.clock.4_8MHz=4.8MHz Internal Oscillator
attiny13_diy.menu.clock.4_8MHz.build.f_cpu=4800000L
attiny13_diy.menu.clock.4_8MHz.bootloader.low_fuses=0x79

attiny13_diy.menu.clock.1_2MHz=1.2MHz Internal Oscillator
attiny13_diy.menu.clock.1_2MHz.build.f_cpu=1200000L
attiny13_diy.menu.clock.1_2MHz.bootloader.low_fuses=0x62


# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#attiny13_diy.menu.core.FullCore=Millis and Tone Available
#attiny13_diy.menu.core.FullCore.build.variant=tiny13
#attiny13_diy.menu.core.FullCore.build.core=tiny
#attiny13_diy.menu.core.FullCore.build.extra_flags=

# tone() is not supported on tiny13, we only have one timer
# and millis() needs it
attiny13_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny13_diy.menu.core.SmallerCore.build.variant=tiny13
attiny13_diy.menu.core.SmallerCore.build.core=tiny
attiny13_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny13_diy.menu.core.SmallestCore=No Millis, No Tone
attiny13_diy.menu.core.SmallestCore.build.variant=tiny13
attiny13_diy.menu.core.SmallestCore.build.core=tiny
attiny13_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Millis Accuracy
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny13_diy.menu.millis_ppm.1p6=Better Or Equal 1.666% Error (Default)
attiny13_diy.menu.millis_ppm.1p6.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=16666UL

attiny13_diy.menu.millis_ppm.50p=Better Or Equal 50% Error (Lowest Code Use)
attiny13_diy.menu.millis_ppm.50p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=500000UL

attiny13_diy.menu.millis_ppm.25p=Better Or Equal 25% Error
attiny13_diy.menu.millis_ppm.25p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=250000UL

attiny13_diy.menu.millis_ppm.10p=Better Or Equal 10% Error
attiny13_diy.menu.millis_ppm.10p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=100000UL

attiny13_diy.menu.millis_ppm.5p=Better Or Equal 5% Error
attiny13_diy.menu.millis_ppm.5p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=50000UL

attiny13_diy.menu.millis_ppm.2p5=Better Or Equal 2.5% Error
attiny13_diy.menu.millis_ppm.2p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=25000UL

attiny13_diy.menu.millis_ppm.1p=Better Or Equal 1% Error
attiny13_diy.menu.millis_ppm.1p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=10000UL

attiny13_diy.menu.millis_ppm.0p5=Better Or Equal 0.5% Error
attiny13_diy.menu.millis_ppm.0p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=5000UL

attiny13_diy.menu.millis_ppm.0p25=Better Or Equal 0.25% Error
attiny13_diy.menu.millis_ppm.0p25.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=2500UL

attiny13_diy.menu.millis_ppm.0p1=Better Or Equal 0.1% Error (Highest Code Use)
attiny13_diy.menu.millis_ppm.0p1.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=1000UL






# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny13_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny13_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny13_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny13_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny13_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny13_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny13_diy.menu.print.Dec=Dec Only Supported
attiny13_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny13_diy.menu.print.Hex=Hex Only Supported
attiny13_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny13_diy.menu.print.Oct=Oct Only Supported
attiny13_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny13_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny13_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN

# Serial Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny13_diy.menu.serial.HalfDuplexRW=Half Duplex, Read+Write
attiny13_diy.menu.serial.HalfDuplexRW.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX

attiny13_diy.menu.serial.HalfDuplexRWStream=Half Duplex, Read+Write Inherits Stream
attiny13_diy.menu.serial.HalfDuplexRWStream.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX -DHALFDUPLEXSERIAL_INHERIT_FROM=Stream

attiny13_diy.menu.serial.HalfDuplexRStream=Half Duplex, Read Only Inherits Stream
attiny13_diy.menu.serial.HalfDuplexRStream.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX -DHALF_DUPLEX_SERIAL_DISABLE_WRITE -DHALFDUPLEXSERIAL_INHERIT_FROM=Stream

attiny13_diy.menu.serial.HalfDuplexWStream=Half Duplex, Write Only Inherits Stream
attiny13_diy.menu.serial.HalfDuplexWStream.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX -DHALF_DUPLEX_SERIAL_DISABLE_READ

# }}}










################################################################################
# ATtiny5
#
# There is only 1 fuse on this series of chips, it really doesn't do much.
#
# Fuse
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  See page 154 of Datasheet
#
#   avrdude DOES NOT mask the fuse bits
#
#   0xFF = Default (Reset Enabled, WDT Not Always On, Clock Not Output)
#
# Lock Bits
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  See page 153 of Datasheet
#
#  avrdude DOES NOT mask the lock bits
#
#    0xFF = No Locking
#    0xFE = Write Locked
#    0xFC = Read and Write Locked
#
# Important: Lock bits must be set after setting the fuse.
#
################################################################################

# {{{ ############### ATtiny5 ##################################################

attiny5_diy.name=ATtiny5
attiny5_diy.build.mcu=attiny5
attiny5_diy.bootloader.fuse=0xFF
attiny5_diy.bootloader.unlock_bits=0xFF
attiny5_diy.bootloader.lock_bits=0xFF
attiny5_diy.build.f_cpu=8000000L
attiny5_diy.upload.speed=57600
attiny5_diy.build.core=tiny
attiny5_diy.build.variant=tiny5_10
attiny5_diy.build.board=ATTINY5_DIY
attiny5_diy.upload.tool=diy_attiny:avrdude_nobootloader_onefuse
attiny5_diy.bootloader.tool=diy_attiny:avrdude_nobootloader_onefuse

# Version Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Only one version, no sense including this menu
# attiny5_diy.menu.version.attiny5 = ATtiny5
# attiny5_diy.menu.version.attiny5.build.mcu = attiny5

# Speed Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# The frequency on the Reduced Core tinyAVR is set at runtime by way of a 
# prescaler (power of 2) on the internal 8MHz oscillator.
#
# See pins_arduino.h setCPUFrequency()

attiny5_diy.menu.clock.8MHz=8MHz
attiny5_diy.menu.clock.8MHz.build.f_cpu=8000000L

attiny5_diy.menu.clock.4MHz=4MHz
attiny5_diy.menu.clock.4MHz.build.f_cpu=4000000L

attiny5_diy.menu.clock.2MHz=2MHz
attiny5_diy.menu.clock.2MHz.build.f_cpu=2000000L

attiny5_diy.menu.clock.1MHz=1MHz
attiny5_diy.menu.clock.1MHz.build.f_cpu=1000000L

# These frequencies under 1MHz need some work
#  something is wrong with delayMicroSecondsAdjusted, running too fast
#  could be a memory issue maybe.

# attiny5_diy.menu.clock.500kHz=500kHz
# attiny5_diy.menu.clock.500kHz.build.f_cpu=500000L

# attiny5_diy.menu.clock.250kHz=250kHz
# attiny5_diy.menu.clock.250kHz.build.f_cpu=250000L

# attiny5_diy.menu.clock.125kHz=125kHz
# attiny5_diy.menu.clock.125kHz.build.f_cpu=125000L


# Bootloader Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Sorry attiny5, you're too small for bootloaders.
#
# attiny5_diy.menu.boot.optiboot=Yes (Normal Arduino Serial/USB Upload)
# attiny5_diy.menu.boot.optiboot.upload.protocol=arduino
# attiny5_diy.menu.boot.optiboot.upload.maximum_size=457
# attiny5_diy.menu.boot.optiboot.bootloader.extended_fuses=0xEB
# attiny5_diy.menu.boot.optiboot.bootloader.file=optiboot_{build.mcu}_{build.f_cpu}_{upload.speed}.hex

attiny5_diy.menu.boot.none=No (TPI Programmer Upload)
attiny5_diy.menu.boot.none.upload.maximum_size=512
attiny5_diy.menu.boot.none.bootloader.tool=diy_attiny:avrdude_nobootloader_onefuse

# Core Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#attiny5_diy.menu.core.FullCore=Millis and Tone Available
#attiny5_diy.menu.core.FullCore.build.core=tiny
#attiny5_diy.menu.core.FullCore.build.extra_flags=

# tone() is not supported on tiny13, we only have one timer
# and millis() needs it
attiny5_diy.menu.core.SmallerCore=Millis Available, No Tone
attiny5_diy.menu.core.SmallerCore.build.core=tiny
attiny5_diy.menu.core.SmallerCore.build.extra_flags=-DNO_TONE

attiny5_diy.menu.core.SmallestCore=No Millis, No Tone
attiny5_diy.menu.core.SmallestCore.build.core=tiny
attiny5_diy.menu.core.SmallestCore.build.extra_flags=-DNO_MILLIS -DNO_TONE

# Millis Accuracy
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny5_diy.menu.millis_ppm.1p6=Better Or Equal 1.666% Error (Default)
attiny5_diy.menu.millis_ppm.1p6.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=16666UL

attiny5_diy.menu.millis_ppm.50p=Better Or Equal 50% Error (Lowest Code Use)
attiny5_diy.menu.millis_ppm.50p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=500000UL

attiny5_diy.menu.millis_ppm.25p=Better Or Equal 25% Error
attiny5_diy.menu.millis_ppm.25p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=250000UL

attiny5_diy.menu.millis_ppm.10p=Better Or Equal 10% Error
attiny5_diy.menu.millis_ppm.10p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=100000UL

attiny5_diy.menu.millis_ppm.5p=Better Or Equal 5% Error
attiny5_diy.menu.millis_ppm.5p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=50000UL

attiny5_diy.menu.millis_ppm.2p5=Better Or Equal 2.5% Error
attiny5_diy.menu.millis_ppm.2p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=25000UL

attiny5_diy.menu.millis_ppm.1p=Better Or Equal 1% Error
attiny5_diy.menu.millis_ppm.1p.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=10000UL

attiny5_diy.menu.millis_ppm.0p5=Better Or Equal 0.5% Error
attiny5_diy.menu.millis_ppm.0p5.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=5000UL

attiny5_diy.menu.millis_ppm.0p25=Better Or Equal 0.25% Error
attiny5_diy.menu.millis_ppm.0p25.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=2500UL

attiny5_diy.menu.millis_ppm.0p1=Better Or Equal 0.1% Error (Highest Code Use)
attiny5_diy.menu.millis_ppm.0p1.build.custom_flags.millis_ppm=-DACCEPTABLE_MILLIS_ERROR_PPM=1000UL


# Print Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny5_diy.menu.print.default=Bin Only Supported (Smallest)
attiny5_diy.menu.print.default.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN

attiny5_diy.menu.print.Arbitrary=Full Support For Arbitrary Bases (Biggest)
attiny5_diy.menu.print.Arbitrary.build.custom_flags.print.use_base=-DPRINT_USE_BASE_ARBITRARY

attiny5_diy.menu.print.BinHexDecOct=Bin, Hex, Dec, Oct Supported
attiny5_diy.menu.print.BinHexDecOct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX -DPRINT_USE_BASE_OCT

attiny5_diy.menu.print.BinHexDec=Bin, Hex, Dec Supported
attiny5_diy.menu.print.BinHexDec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN -DPRINT_USE_BASE_DEC -DPRINT_USE_BASE_HEX

attiny5_diy.menu.print.Dec=Dec Only Supported
attiny5_diy.menu.print.Dec.build.custom_flags.print.use_base=-DPRINT_USE_BASE_DEC

attiny5_diy.menu.print.Hex=Hex Only Supported
attiny5_diy.menu.print.Hex.build.custom_flags.print.use_base=-DPRINT_USE_BASE_HEX

attiny5_diy.menu.print.Oct=Oct Only Supported
attiny5_diy.menu.print.Oct.build.custom_flags.print.use_base=-DPRINT_USE_BASE_OCT

attiny5_diy.menu.print.Bin=Bin Only Supported (Smallest)
attiny5_diy.menu.print.Bin.build.custom_flags.print.use_base=-DPRINT_USE_BASE_BIN

# Serial Menu
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
attiny5_diy.menu.serial.HalfDuplexRW=Half Duplex, Read+Write
attiny5_diy.menu.serial.HalfDuplexRW.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX

attiny5_diy.menu.serial.HalfDuplexRWStream=Half Duplex, Read+Write Inherits Stream
attiny5_diy.menu.serial.HalfDuplexRWStream.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX -DHALFDUPLEXSERIAL_INHERIT_FROM=Stream

attiny5_diy.menu.serial.HalfDuplexRStream=Half Duplex, Read Only Inherits Stream
attiny5_diy.menu.serial.HalfDuplexRStream.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX -DHALF_DUPLEX_SERIAL_DISABLE_WRITE -DHALFDUPLEXSERIAL_INHERIT_FROM=Stream

attiny5_diy.menu.serial.HalfDuplexWStream=Half Duplex, Write Only Inherits Stream
attiny5_diy.menu.serial.HalfDuplexWStream.build.custom_flags.serial.use_serial_type=-DUSE_SERIAL_TYPE=SERIAL_TYPE_HALF_DUPLEX -DHALF_DUPLEX_SERIAL_DISABLE_READ

# }}}

